on: [push]

jobs:
  lighthouse:
    if: startsWith(github.head_ref, 'lighthouse-patches') == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Get branch name
        id: git-branch
        run: echo ::set-output name=name::${GITHUB_REF/refs\/heads\//}

      - name: Set lighthouse patch branch name
        id: patch-branch
        run: echo ::set-output name=name::"lighthouse-patches/${{ steps.git-branch.outputs.name }}"

      - name: Normalize branch for Vercel
        id: normalize-branch
        run: BRANCH=${{ steps.git-branch.outputs.name }}; echo ::set-output name=name::${BRANCH/\//-}

      - name: Get Vercel preview URL
        run: if [ ${{ steps.normalize-branch.outputs.name }} = "main" ]; then URL="https://averyharnish.com"; else URL="https://avery-site-git-${{ steps.normalize-branch.outputs.name }}-averyharnish.vercel.app"; fi; echo ::set-output name=url::$URL
        id: vercel

      - name: Run Lighthouse Audit
        uses: foo-software/lighthouse-check-action@v8.0.1
        id: lighthouse
        with:
          urls: ${{ steps.vercel.outputs.url }}

      - name: Save Lighthouse output to file
        run: echo '${{ steps.lighthouse.outputs.lighthouseCheckResults }}' > ./lighthouse/report.json

      - name: Install npm dependencies
        run: npm i

      - name: Generate Lighthouse badges
        if: ${{ steps.normalize-branch.outputs.name }} == "main"
        id: badges
        run: npm run badges:write

      - name: Generate Lighthouse badge comment
        if: ${{ steps.normalize-branch.outputs.name }} != "main"
        id: badge-comment
        run: npm run badges:comment

      - name: Create PR with Lighthouse results (on main branch only)
        if: ${{ steps.normalize-branch.outputs.name }} == "main"
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: "chore: updates lighthouse badges"
          title: "chore: updates lighthouse badges for `${{ steps.git-branch.outputs.name }}`"
          branch: ${{ steps.patch-branch.outputs.name }}

      - name: Find current preview
        uses: jwalton/gh-find-current-pr@v1
        id: finder

      - name: Create comment with Lighthouse results (on non-main branch only)
        if: ${{ steps.normalize-branch.outputs.name }} != "main"
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ steps.finder.outputs.pr }}
          message: ${{ steps.badge-comment.outputs.comment }}

